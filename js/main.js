"use strict";

(function () {
  var fieldImages = document.querySelectorAll(".list__image");
  var contentImagePreview = document.createElement("div");
  contentImagePreview.classList.add("preview");
  var contentImagePreviewItem = document.createElement("img");

  if (!fieldImages.length) {
    return;
  }

  function onMouseOver(event) {
    var mouseX = event.pageX;
    var mouseY = event.pageY;
    var crd = event.target.getBoundingClientRect(); // let activePointer = crd.left <= mouseX && mouseX <= crd.right && crd.top <= mouseY && mouseY <= crd.bottom;
    // console.log(activePointer)

    requestAnimationFrame(function movePointer() {
      document.querySelector(".wrapper").insertAdjacentElement("afterbegin", contentImagePreview);
      contentImagePreview.insertAdjacentElement("afterbegin", contentImagePreviewItem);
      contentImagePreviewItem.setAttribute("src", event.target.getAttribute("src"));
      contentImagePreview.style.left = Math.floor(mouseX) + 10 + 'px';
      contentImagePreview.style.top = Math.floor(mouseY) - 10 + 'px';
    });
  }

  function disablePointer() {
    requestAnimationFrame(function hidePointer() {
      contentImagePreview.remove();
    });
  }

  for (var index = 0; index < fieldImages.length; index++) {
    var image = fieldImages[index];

    if (document.documentElement.clientWidth > 1440) {
      image.addEventListener('mouseover', onMouseOver, false);
      image.addEventListener('mouseout', disablePointer, false);
    }
  }

  window.addEventListener("resize", function (event) {
    for (var _index = 0; _index < fieldImages.length; _index++) {
      var _image = fieldImages[_index];

      if (document.documentElement.clientWidth < 1441) {
        _image.removeEventListener('mouseover', onMouseOver, false);

        _image.removeEventListener('mouseout', disablePointer, false);
      } else {
        _image.addEventListener('mouseover', onMouseOver, false);

        _image.addEventListener('mouseout', disablePointer, false);
      }
    }
  });
})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiZmllbGRJbWFnZXMiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJjb250ZW50SW1hZ2VQcmV2aWV3IiwiY3JlYXRlRWxlbWVudCIsImNsYXNzTGlzdCIsImFkZCIsImNvbnRlbnRJbWFnZVByZXZpZXdJdGVtIiwibGVuZ3RoIiwib25Nb3VzZU92ZXIiLCJldmVudCIsIm1vdXNlWCIsInBhZ2VYIiwibW91c2VZIiwicGFnZVkiLCJjcmQiLCJ0YXJnZXQiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJtb3ZlUG9pbnRlciIsInF1ZXJ5U2VsZWN0b3IiLCJpbnNlcnRBZGphY2VudEVsZW1lbnQiLCJzZXRBdHRyaWJ1dGUiLCJnZXRBdHRyaWJ1dGUiLCJzdHlsZSIsImxlZnQiLCJNYXRoIiwiZmxvb3IiLCJ0b3AiLCJkaXNhYmxlUG9pbnRlciIsImhpZGVQb2ludGVyIiwicmVtb3ZlIiwiaW5kZXgiLCJpbWFnZSIsImRvY3VtZW50RWxlbWVudCIsImNsaWVudFdpZHRoIiwiYWRkRXZlbnRMaXN0ZW5lciIsIndpbmRvdyIsInJlbW92ZUV2ZW50TGlzdGVuZXIiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLENBQUMsWUFBVTtBQUNQLE1BQU1BLFdBQVcsR0FBR0MsUUFBUSxDQUFDQyxnQkFBVCxDQUEwQixjQUExQixDQUFwQjtBQUNBLE1BQU1DLG1CQUFtQixHQUFHRixRQUFRLENBQUNHLGFBQVQsQ0FBdUIsS0FBdkIsQ0FBNUI7QUFDTUQsRUFBQUEsbUJBQW1CLENBQUNFLFNBQXBCLENBQThCQyxHQUE5QixDQUFrQyxTQUFsQztBQUNOLE1BQU1DLHVCQUF1QixHQUFHTixRQUFRLENBQUNHLGFBQVQsQ0FBdUIsS0FBdkIsQ0FBaEM7O0FBRUEsTUFBSSxDQUFDSixXQUFXLENBQUNRLE1BQWpCLEVBQXlCO0FBQ3JCO0FBQ0g7O0FBR0QsV0FBU0MsV0FBVCxDQUFxQkMsS0FBckIsRUFBNEI7QUFDeEIsUUFBSUMsTUFBTSxHQUFHRCxLQUFLLENBQUNFLEtBQW5CO0FBQ0EsUUFBSUMsTUFBTSxHQUFHSCxLQUFLLENBQUNJLEtBQW5CO0FBQ0EsUUFBSUMsR0FBRyxHQUFHTCxLQUFLLENBQUNNLE1BQU4sQ0FBYUMscUJBQWIsRUFBVixDQUh3QixDQUl4QjtBQUNBOztBQUNBQyxJQUFBQSxxQkFBcUIsQ0FBQyxTQUFTQyxXQUFULEdBQXVCO0FBQ3pDbEIsTUFBQUEsUUFBUSxDQUFDbUIsYUFBVCxDQUF1QixVQUF2QixFQUFtQ0MscUJBQW5DLENBQXlELFlBQXpELEVBQXVFbEIsbUJBQXZFO0FBQ0FBLE1BQUFBLG1CQUFtQixDQUFDa0IscUJBQXBCLENBQTBDLFlBQTFDLEVBQXdEZCx1QkFBeEQ7QUFDQUEsTUFBQUEsdUJBQXVCLENBQUNlLFlBQXhCLENBQXFDLEtBQXJDLEVBQTRDWixLQUFLLENBQUNNLE1BQU4sQ0FBYU8sWUFBYixDQUEwQixLQUExQixDQUE1QztBQUNBcEIsTUFBQUEsbUJBQW1CLENBQUNxQixLQUFwQixDQUEwQkMsSUFBMUIsR0FBaUNDLElBQUksQ0FBQ0MsS0FBTCxDQUFXaEIsTUFBWCxJQUFxQixFQUFyQixHQUEwQixJQUEzRDtBQUNBUixNQUFBQSxtQkFBbUIsQ0FBQ3FCLEtBQXBCLENBQTBCSSxHQUExQixHQUFnQ0YsSUFBSSxDQUFDQyxLQUFMLENBQVdkLE1BQVgsSUFBcUIsRUFBckIsR0FBMEIsSUFBMUQ7QUFDSCxLQU5vQixDQUFyQjtBQU9IOztBQUVELFdBQVNnQixjQUFULEdBQTBCO0FBQ3RCWCxJQUFBQSxxQkFBcUIsQ0FBQyxTQUFTWSxXQUFULEdBQXVCO0FBQ3pDM0IsTUFBQUEsbUJBQW1CLENBQUM0QixNQUFwQjtBQUNILEtBRm9CLENBQXJCO0FBR0g7O0FBRUQsT0FBSyxJQUFJQyxLQUFLLEdBQUcsQ0FBakIsRUFBb0JBLEtBQUssR0FBR2hDLFdBQVcsQ0FBQ1EsTUFBeEMsRUFBZ0R3QixLQUFLLEVBQXJELEVBQXlEO0FBQ3JELFFBQU1DLEtBQUssR0FBR2pDLFdBQVcsQ0FBQ2dDLEtBQUQsQ0FBekI7O0FBQ0EsUUFBSS9CLFFBQVEsQ0FBQ2lDLGVBQVQsQ0FBeUJDLFdBQXpCLEdBQXVDLElBQTNDLEVBQWlEO0FBQzdDRixNQUFBQSxLQUFLLENBQUNHLGdCQUFOLENBQXVCLFdBQXZCLEVBQW9DM0IsV0FBcEMsRUFBaUQsS0FBakQ7QUFDQXdCLE1BQUFBLEtBQUssQ0FBQ0csZ0JBQU4sQ0FBdUIsVUFBdkIsRUFBbUNQLGNBQW5DLEVBQW1ELEtBQW5EO0FBQ0g7QUFDSjs7QUFFRFEsRUFBQUEsTUFBTSxDQUFDRCxnQkFBUCxDQUF3QixRQUF4QixFQUFrQyxVQUFBMUIsS0FBSyxFQUFJO0FBQ3ZDLFNBQUssSUFBSXNCLE1BQUssR0FBRyxDQUFqQixFQUFvQkEsTUFBSyxHQUFHaEMsV0FBVyxDQUFDUSxNQUF4QyxFQUFnRHdCLE1BQUssRUFBckQsRUFBeUQ7QUFDckQsVUFBTUMsTUFBSyxHQUFHakMsV0FBVyxDQUFDZ0MsTUFBRCxDQUF6Qjs7QUFDQSxVQUFJL0IsUUFBUSxDQUFDaUMsZUFBVCxDQUF5QkMsV0FBekIsR0FBdUMsSUFBM0MsRUFBaUQ7QUFDN0NGLFFBQUFBLE1BQUssQ0FBQ0ssbUJBQU4sQ0FBMEIsV0FBMUIsRUFBdUM3QixXQUF2QyxFQUFvRCxLQUFwRDs7QUFDQXdCLFFBQUFBLE1BQUssQ0FBQ0ssbUJBQU4sQ0FBMEIsVUFBMUIsRUFBc0NULGNBQXRDLEVBQXNELEtBQXREO0FBQ0gsT0FIRCxNQUdPO0FBQ0hJLFFBQUFBLE1BQUssQ0FBQ0csZ0JBQU4sQ0FBdUIsV0FBdkIsRUFBb0MzQixXQUFwQyxFQUFpRCxLQUFqRDs7QUFDQXdCLFFBQUFBLE1BQUssQ0FBQ0csZ0JBQU4sQ0FBdUIsVUFBdkIsRUFBbUNQLGNBQW5DLEVBQW1ELEtBQW5EO0FBQ0g7QUFDSjtBQUVKLEdBWkQ7QUFjSCxDQXRERCIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5cclxuKGZ1bmN0aW9uKCl7XHJcbiAgICBjb25zdCBmaWVsZEltYWdlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIubGlzdF9faW1hZ2VcIik7XHJcbiAgICBjb25zdCBjb250ZW50SW1hZ2VQcmV2aWV3ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICAgICAgICAgIGNvbnRlbnRJbWFnZVByZXZpZXcuY2xhc3NMaXN0LmFkZChcInByZXZpZXdcIik7XHJcbiAgICBjb25zdCBjb250ZW50SW1hZ2VQcmV2aWV3SXRlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIik7XHJcblxyXG4gICAgaWYgKCFmaWVsZEltYWdlcy5sZW5ndGgpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG5cclxuICAgIGZ1bmN0aW9uIG9uTW91c2VPdmVyKGV2ZW50KSB7XHJcbiAgICAgICAgbGV0IG1vdXNlWCA9IGV2ZW50LnBhZ2VYO1xyXG4gICAgICAgIGxldCBtb3VzZVkgPSBldmVudC5wYWdlWTsgICAgICAgICAgICBcclxuICAgICAgICBsZXQgY3JkID0gZXZlbnQudGFyZ2V0LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xyXG4gICAgICAgIC8vIGxldCBhY3RpdmVQb2ludGVyID0gY3JkLmxlZnQgPD0gbW91c2VYICYmIG1vdXNlWCA8PSBjcmQucmlnaHQgJiYgY3JkLnRvcCA8PSBtb3VzZVkgJiYgbW91c2VZIDw9IGNyZC5ib3R0b207XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coYWN0aXZlUG9pbnRlcilcclxuICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZnVuY3Rpb24gbW92ZVBvaW50ZXIoKSB7XHJcbiAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIud3JhcHBlclwiKS5pbnNlcnRBZGphY2VudEVsZW1lbnQoXCJhZnRlcmJlZ2luXCIsIGNvbnRlbnRJbWFnZVByZXZpZXcpO1xyXG4gICAgICAgICAgICBjb250ZW50SW1hZ2VQcmV2aWV3Lmluc2VydEFkamFjZW50RWxlbWVudChcImFmdGVyYmVnaW5cIiwgY29udGVudEltYWdlUHJldmlld0l0ZW0pO1xyXG4gICAgICAgICAgICBjb250ZW50SW1hZ2VQcmV2aWV3SXRlbS5zZXRBdHRyaWJ1dGUoXCJzcmNcIiwgZXZlbnQudGFyZ2V0LmdldEF0dHJpYnV0ZShcInNyY1wiKSk7XHJcbiAgICAgICAgICAgIGNvbnRlbnRJbWFnZVByZXZpZXcuc3R5bGUubGVmdCA9IE1hdGguZmxvb3IobW91c2VYKSArIDEwICsgJ3B4JztcclxuICAgICAgICAgICAgY29udGVudEltYWdlUHJldmlldy5zdHlsZS50b3AgPSBNYXRoLmZsb29yKG1vdXNlWSkgLSAxMCArICdweCc7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGZ1bmN0aW9uIGRpc2FibGVQb2ludGVyKCkge1xyXG4gICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShmdW5jdGlvbiBoaWRlUG9pbnRlcigpIHtcclxuICAgICAgICAgICAgY29udGVudEltYWdlUHJldmlldy5yZW1vdmUoKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IGZpZWxkSW1hZ2VzLmxlbmd0aDsgaW5kZXgrKykge1xyXG4gICAgICAgIGNvbnN0IGltYWdlID0gZmllbGRJbWFnZXNbaW5kZXhdO1xyXG4gICAgICAgIGlmIChkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGggPiAxNDQwKSB7XHJcbiAgICAgICAgICAgIGltYWdlLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlb3ZlcicsIG9uTW91c2VPdmVyLCBmYWxzZSk7XHJcbiAgICAgICAgICAgIGltYWdlLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlb3V0JywgZGlzYWJsZVBvaW50ZXIsIGZhbHNlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIiwgZXZlbnQgPT4ge1xyXG4gICAgICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBmaWVsZEltYWdlcy5sZW5ndGg7IGluZGV4KyspIHtcclxuICAgICAgICAgICAgY29uc3QgaW1hZ2UgPSBmaWVsZEltYWdlc1tpbmRleF07XHJcbiAgICAgICAgICAgIGlmIChkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGggPCAxNDQxKSB7XHJcbiAgICAgICAgICAgICAgICBpbWFnZS5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZW92ZXInLCBvbk1vdXNlT3ZlciwgZmFsc2UpO1xyXG4gICAgICAgICAgICAgICAgaW1hZ2UucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2VvdXQnLCBkaXNhYmxlUG9pbnRlciwgZmFsc2UpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgaW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcignbW91c2VvdmVyJywgb25Nb3VzZU92ZXIsIGZhbHNlKTtcclxuICAgICAgICAgICAgICAgIGltYWdlLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlb3V0JywgZGlzYWJsZVBvaW50ZXIsIGZhbHNlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICB9KVxyXG5cclxufSkoKTtcclxuIl0sImZpbGUiOiJtYWluLmpzIn0=